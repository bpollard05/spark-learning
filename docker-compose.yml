# =====================================================
# FILE: docker-compose.yml
# LOCATION: Root directory (ai-learning-companion/)
# =====================================================

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: learning_companion
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # User Service
  user-service:
    build:
      context: ./services/user_service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/learning_companion
      SECRET_KEY: dev-secret-key-change-in-production
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AI Orchestrator Service
  ai-orchestrator:
    build:
      context: ./services/ai_orchestrator
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/learning_companion
      REDIS_URL: redis://redis:6379
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      USER_SERVICE_URL: http://user-service:8001
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Study Buddy Service
  study-buddy:
    build:
      context: ./services/study_buddy
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/learning_companion
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Lab Service
  lab-service:
    build:
      context: ./services/lab_service
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/learning_companion
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Gamification Service
  gamification:
    build:
      context: ./services/gamification
      dockerfile: Dockerfile
    ports:
      - "8005:8005"
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/learning_companion
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Content Service (no Dockerfile present, run via python image)
  content-service:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ./services/content_service:/app
    command: bash -lc "pip install -r /app/requirements.txt || true && pip install fastapi uvicorn sqlalchemy psycopg2-binary pydantic boto3 anthropic python-multipart && uvicorn main:app --host 0.0.0.0 --port 8006"
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/learning_companion
    depends_on:
      - postgres
    ports:
      - "8006:8006"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Analytics Service (no Dockerfile present, run via python image)
  analytics:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ./services/analytics:/app
    command: bash -lc "pip install -r /app/requirements.txt || true && pip install fastapi uvicorn sqlalchemy psycopg2-binary pydantic boto3 anthropic && uvicorn main:app --host 0.0.0.0 --port 8007"
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/learning_companion
    depends_on:
      - postgres
    ports:
      - "8007:8007"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8007/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway (nginx reverse proxy)
  api-gateway:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - user-service
      - ai-orchestrator
      - study-buddy
      - lab-service
      - gamification

volumes:
  postgres_data: